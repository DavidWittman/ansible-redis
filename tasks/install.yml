---
- name: enable overcommit in sysctl
  sysctl:
    name: vm.overcommit_memory
    value: 1
    state: present
    reload: yes
    ignoreerrors: yes
  when: redis_travis_ci is not defined

- name: Disable Transparent Hugepages
  shell: |
    if test -f /sys/kernel/mm/transparent_hugepage/enabled; then echo never > /sys/kernel/mm/transparent_hugepage/enabled; fi;
    if test -f /sys/kernel/mm/transparent_hugepage/defrag; then echo never > /sys/kernel/mm/transparent_hugepage/defrag; fi;
  when: redis_travis_ci is not defined  

- name: create script to Disable Transparent Hugepages
  template:
    src: "{{ item }}"
    dest: /etc/init.d/disable-transparent-hugepages
    mode: 0755
  # Choose the distro-specific template. We must specify the templates
  # path here because with_first_found tries to find files in files/
  with_first_found:
    - files:
      - "{{ ansible_os_family }}/disable-transparent-hugepages.j2"
      - default/disable-transparent-hugepages.j2
      paths:
        - ../templates
  when: ansible_service_mgr|default() != 'systemd'

- name: create Disable Transparent Hugepages systemd service
  template:
    src: "{{ item }}"
    dest: /etc/systemd/system/disable-transparent-hugepages.service
    mode: 0644
  with_first_found:
    - files:
      - "{{ ansible_os_family }}/disable-transparent-hugepages.service.j2"
      - default/disable-transparent-hugepages.service.j2
      paths:
        - ../templates
  register: dth_unit_file
  when: ansible_service_mgr|default() == "systemd"

- name: set Disable Transparent Hugepages to start at boot
  service:
    name: disable-transparent-hugepages
    enabled: yes
  when: 
    - redis_travis_ci is not defined  

- name: ensure Disable Transparent Hugepages is started
  service:
    name: disable-transparent-hugepages
    state: started
  when: 
    - redis_travis_ci is not defined  

- name: compile redis
  command: make -j{{ ansible_processor_cores + 1 }}{{ ' 32bit' if redis_make_32bit|bool else '' }}
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
    creates: /usr/local/src/redis-{{ redis_version }}/src/redis-server

- name: create redis install directory
  file:
    path: "{{ redis_install_dir }}"
    state: directory

- name: create /etc/redis
  file:
    path: /etc/redis
    state: directory

- name: check if redis user exists (ignore errors)
  command: id {{ redis_user }}
  ignore_errors: yes
  changed_when: false
  register: user_exists

- name: add redis user
  user:
    name: "{{ redis_user }}"
    comment: "Redis"
    home: "{{ redis_install_dir }}"
    shell: /bin/false
    system: yes
  when: user_exists|failed


- name: create /var/run/redis
  file:
    path: /var/run/redis
    state: directory
    owner: "{{ redis_user }}"

- name: install redis
  command: make PREFIX={{ redis_install_dir }} install
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
    creates: "{{ redis_install_dir }}/bin/redis-server"
