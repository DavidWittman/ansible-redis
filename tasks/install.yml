---
- name: enable overcommit in sysctl
  sysctl:
    name: vm.overcommit_memory
    value: "1"
    state: present
    reload: yes
    ignoreerrors: yes
  when: redis_travis_ci is not defined

- name: compile redis
  shell: umask 0022 && make -j{{ ansible_processor_cores|default(1) + 1 }}{{ ' 32bit' if redis_make_32bit|bool else '' }}
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
    creates: /usr/local/src/redis-{{ redis_version }}/src/redis-server

- name: create redis install directory
  file:
    path: "{{ redis_install_dir }}"
    state: directory
    mode: 0755

- name: create /etc/redis
  file:
    path: /etc/redis
    state: directory
    mode: 0755

- name: create /var/run/redis
  file:
    path: /var/run/redis
    state: directory
    owner: "{{ redis_user }}"

- name: install redis (if not installed or if different version)
  shell: umask 0022 && make PREFIX={{ redis_install_dir }} install
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
  when: not redis_is_installed or (redis_runtime_version is defined and redis_version != redis_runtime_version)

- name: list redis binaries to add to alternatives
  shell: "[ -d {{ redis_install_dir }}/bin ] && ls -1 {{ redis_install_dir }}/bin"
  check_mode: no
  register: redis_binaries
  failed_when: redis_binaries.rc != 0 and not ansible_check_mode
  changed_when: false

- name: add redis binaries to alternatives
  alternatives:
    name: "{{ item }}"
    path: "{{ redis_install_dir }}/bin/{{ item }}"
    link: "/usr/bin/{{ item }}"
  loop: "{{ redis_binaries.stdout_lines }}"
